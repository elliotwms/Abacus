<?php

use Abacus\Currency;
use Abacus\AbacusException;

class CurrencyTest extends PHPUnit_Framework_TestCase
{
    /**
     * Polls API
     *
     * Abacus must be able to get the latest exchange rates and add
     * them to the storage/exchange.json file. As the rest of the
     * application depends on the file generated by this action,
     * this method is done first.
     *
     */
    public function testPolls()
    {
        // Poll the API
        $result = Currency::update(getenv('ABACUS_OPEN_EXCHANGE_KEY'));

        // Abacus::update() returns the size of the file it created
        $this->assertInternalType('int', $result);

        // It should have make a file in this location
        $this->assertFileExists(sys_get_temp_dir() . "/abacus_exchange.json");
    }

    /**
     * @expectedException Abacus\AbacusException
     * @expectedExceptionMessage Undefined API key
     */
    public function testFailsToPollWithUndefinedKey()
    {
        Currency::update('');
    }

    /**
     * @expectedException Abacus\AbacusException
     * @expectedExceptionMessage Invalid API key
     */
    public function testFailsToPollWithIncorrectKey()
    {
        Currency::update('invalid_key');
    }


    /**
     * When a currency is instantiated it should have a certain selection of attributes
     */
    public function testInstantiates()
    {
        $currency = new Currency();

        $this->assertObjectHasAttribute("name", $currency);
        $this->assertObjectHasAttribute("name_plural", $currency);
        $this->assertObjectHasAttribute("code", $currency);
        $this->assertObjectHasAttribute("symbol", $currency);
        $this->assertObjectHasAttribute("symbol_native", $currency);
    }


    /**
     * @expectedException Abacus\AbacusException
     * @expectedExceptionMessage Currency not found
     */
    public function testThrowsCurrencyNotFoundException()
    {
        $currency = new Currency('');
    }
}
